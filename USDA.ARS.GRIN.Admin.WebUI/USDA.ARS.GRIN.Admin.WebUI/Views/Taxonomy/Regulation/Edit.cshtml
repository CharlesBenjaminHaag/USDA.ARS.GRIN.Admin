@model USDA.ARS.GRIN.Admin.WebUI.ViewModels.Taxonomy.RegulationEditViewModel
@{
    ViewBag.Title = TempData["page_title"];
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!--
======================================================================================================
REVISION HISTORY
======================================================================================================
-->
@if (Model.ID > 0)
{
    <div class="row">
        <div class="col-md-12">
            <div class="callout callout-info" style="vertical-align:middle;">
                @Html.Raw(Model.RevisionHistoryText)
            </div>
        </div>
    </div>
}
@using (Html.BeginForm("RegulationEdit", "Taxonomy", FormMethod.Post, new { id = "frmEdit" }))
{
    @Html.HiddenFor(x => x.ID)
    @Html.HiddenFor(x => x.DataSourceName)
    <div class="box box-default">
        <div class="box-header">
            <h3 class="box-title"><a name="section-detail"></a>Summary</h3>
            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                    <i class="fa fa-minus"></i>
                </button>
            </div>
        </div>
        <div class="box-body">
            @Html.ValidationSummary()
            @Html.Raw(Model.ErrorMessage)
            <div class="row">
                <div class="col-md-4">
                    <label>Geography</label>
                    <div class="input-group">
                        <input type="text" id="txtGeographyDescription" disabled="" value="@Model.GeographyDescription" class="form-control" />
                        @Html.HiddenFor(x => x.GeographyID)
                        <span class="input-group-btn">
                            <button type="button" class="btn btn-primary btn-flat" data-toggle="modal" data-target="#modal-geography-search">
                                <i class="fa fa-external-link"></i>
                            </button>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(x => x.GeographyDescription)
                </div>
                <div class="col-md-2">
                    <div class="form-group form-horizontal">
                        <label>Regulation Type</label>
                        @Html.DropDownListFor(x => x.RegulationTypeCode, Model.RegulationTypeCodes, "All Regulation Types", new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group form-horizontal">
                        <label>Regulation Level</label>
                        @Html.DropDownListFor(x => x.RegulationLevelCode, Model.RegulationLevelCodes, "All Regulation Levels", new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group form-horizontal">
                        <label>Description</label>
                        @Html.TextBoxFor(x => x.Description, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group form-horizontal">
                        <label>URL</label>
                        <div class="input-group">
                            @Html.TextBoxFor(x => x.URL, new { @class = "form-control" })
                            <span class="input-group-btn">
                                <button type="button" id="btnGoToURL" class="btn btn-default btn-flat">
                                    <i class="fa fa-external-link"></i>
                                </button>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row" style="margin-top:1.0em;">
                <div class="col-md-12">
                    <label>Note</label>
                    @Html.TextAreaFor(x => x.Note, new { @id = "txtNote", @class = "form-control" })
                    <script>
                        CKEDITOR.replace('txtNote');
                    </script>
                </div>
            </div>
        </div>
        <div class="box-footer">
            <button type="button" class="btn btn-default" data-toggle="modal" data-target="#modal-note-search">
                <i class="fa fa-search"></i>
                Search Notes...
            </button>
            <button type="submit" class="btn btn-primary">
                <i class="fa fa-save"></i>
                Save Edits
            </button>
        </div>
    </div>
}

@{ Html.RenderAction("_NoteSearchModal", "Taxonomy", new { taxonId = Model.ID }); }
@{ Html.RenderAction("_GeographySearchModal", "Taxonomy"); }


<script type="text/javascript">
    $(document).ready(function () {
        Init();
    });

    function Init() {
        try {
        }
        catch (ex) {
            console.log(ex);
        }
    }

    /*
    ===========================================================================
    NOTE SEARCH MODAL
    ===========================================================================
    */
    $(document).on("click", "[id='btnSearchNotes']", function () {
        var url = '@Url.Action("NoteSearch", "Taxonomy")';
        var dataSourceName = $("#DataSourceName").val();
        var searchText = $("#txtSearchNotes").val();

        $.post(url, { dataSourceName: dataSourceName, searchText: searchText })
            .done(function (response) {
                $("#section-note-search-results").html(response);
            });
    });

    function SelectNote(noteText) {
        $('#modal-note-search').modal('hide');
        CKEDITOR.instances.txtNote.setData(noteText);
    }
</script>
