@model USDA.ARS.GRIN.Admin.WebUI.ViewModels.Taxonomy.CWRMapEditViewModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .checkbox-container {
        margin-right: 45px;
    }
</style>

@if (Model.ID > 0)
{
    <div class="row">
        <div class="col-md-12">
            <div class="callout callout-info" style="vertical-align:middle;">
                @Html.Raw(Model.RevisionHistoryText)
            </div>
        </div>
    </div>
}

@using (Html.BeginForm("CWRMapEdit", "Taxonomy", FormMethod.Post, new { id = "frmEdit" }))
{
    @Html.HiddenFor(x => x.DataSourceName)
    @Html.HiddenFor(x => x.ID)
    @Html.HiddenFor(x => x.CurrentID)


<div id="section-validation-summary" class="callout callout-danger" style="display:none;">
    <h4>Validation Error</h4>
    <ul id="validation-error-list">
        <li>You must select a species.</li>
        <li>You must select a crop.</li>
    </ul>
</div>

<div class="box box-default">
    <div class="box-header">
        <h3 class="box-title">Detail</h3>
        <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                <i class="fa fa-minus"></i>
            </button>
        </div>
    </div>
    <div class="box-body">
        @using (Html.BeginForm("CWRMapEdit", "Taxonomy", FormMethod.Post, new { id = "frmSearch" }))
        {
            @Html.ValidationSummary()
            @Html.Raw(Model.ErrorMessage)
            <div class="row">
                <div class="col-md-3">
                    <label>Crop</label>
                    <div class="input-group">
                        @Html.TextBoxFor(x => x.CropForCWRName, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                        @Html.HiddenFor(x => x.CropForCWRID)
                        <span class="input-group-btn">
                            <button type="button" class="btn btn-primary btn-flat" data-toggle="modal" data-target="#modal-crop-for-cwr-search">
                                <i class="fa fa-search"></i>
                            </button>
                        </span>
                    </div>
                </div>
                <div class="col-md-3">
                    <label>Species</label>
                    <div class="input-group">
                        @Html.TextBoxFor(x => x.SpeciesName, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                        @Html.HiddenFor(x => x.SpeciesID)
                        <span class="input-group-btn">
                            <button type="button" class="btn btn-primary btn-flat" data-toggle="modal" data-target="#modal-species-search">
                                <i class="fa fa-search"></i>
                            </button>
                        </span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group form-horizontal">
                        <label>Crop Common Name</label>
                        @Html.TextBoxFor(x => x.CropCommonName, new { @id = "txtCropCommonName", @class = "form-control", @disabled = "" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group form-horizontal">
                        <label>Genepool Code</label>
                        @Html.DropDownListFor(x => x.GenepoolCode, Model.GenepoolCodes, "All Genepool Codes", new { @id = "ddlGenepoolCode", @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-1">
                    <div class="form-group form-horizontal">
                        @Html.CheckBoxFor(x => x.IsCrop, new { @id = "cbxIsCrop" })<label class="label-checkbox">Is Crop</label>
                    </div>
                </div>
                <div class="col-md-1">
                    <div class="form-group form-horizontal">
                        @Html.CheckBoxFor(x => x.IsGraftStock, new { @id = "cbxIsGraftStock" })<label class="label-checkbox">Is Graftstock</label>
                    </div>
                </div>
                <div class="col-md-1">
                    <div class="form-group form-horizontal">
                        @Html.CheckBoxFor(x => x.IsPotential, new { @id = "cbxIsPotential" })<label class="label-checkbox">Is Potential</label>
                    </div>
                </div>
                <div class="col-md-12" style="margin-top:1.0em;">
                    <label>Note</label>
                    @Html.TextAreaFor(x => x.Note, new { @id = "txtNote", @class = "form-control" })
                    <script>
                        CKEDITOR.replace('txtNote');
                    </script>
                </div>
            </div>
            <div class="box-footer">
                <button type="button" id="btnSubmit" class="btn btn-default">Save Edits</button>
                <button type="button" class="btn btn-default pull-right" data-toggle="modal" data-target="#modal-note-search">Search Notes...</button>
            </div>
        }
    </div>
</div>
}

@{ Html.RenderAction("_SpeciesSearchModal", "Taxonomy"); }
@{ Html.RenderAction("_CropForCWRSearchModal", "Taxonomy", new { id = Model.ID, context = "taxononomy_cwr_map" }); }
@{ Html.RenderAction("_NoteSearchModal", "Taxonomy", new { taxonId = Model.ID }); }

<script type="text/javascript">

    $(document).ready(function () {
        Init();
    });

    function Init() {
        try {
            //TODO

        }
        catch (ex) {
            console.log(ex);
        }
    }

    $('#cbxIsCrop').click(function () {
        var thisCheck = $(this);

        if ($(this).prop("checked") == true) {
            $("#ddlGenepoolCode option[value='']").attr('selected', true)
            $('#ddlGenepoolCode').prop('disabled', true);
            $('#cbxIsGraftStock').prop('disabled', true);
            $("#cbxIsGraftStock").prop("checked", false);
            $('#cbxIsPotential').prop('disabled', true);
            $("#cbxIsPotential").prop("checked", false);
            $("#txtCropCommonName").prop('disabled', false);
        }
        else {
            $('#ddlGenepoolCode').prop('disabled', false);
            $('#cbxIsGraftStock').prop('disabled', false);
            $('#cbxIsPotential').prop('disabled', false);
            $("#txtCropCommonName").prop('disabled', true);
            $("#txtCropCommonName").val("");
        }
    });

    $(document).on("click", "[id='btnSubmit']", function () {
        var speciesId = $("#SpeciesID").val();
        var cropForCwrId = $("#CropForCWRID").val();

        $("#validation-error-list").empty();
        if (speciesId <= 0) {
            $("#validation-error-list").append("<li>You must select a species.</li>");
        }

        if (cropForCwrId <= 0) {
            $("#validation-error-list").append("<li>You must select a crop.</li>");
            
        }

        if ($('#validation-error-list li').length > 1) {
            $("#section-validation-summary").show();
        }
        else {
            $(frmEdit).submit();
        }
    });

    /*
    ===========================================================================
    SPECIES MODAL
    ===========================================================================
    */
    $(document).on("click", "[id='btnSearchSpecies']", function () {
        var link = '@Url.Action("SpeciesSearch", "Taxonomy")';
        var isAcceptedName = $('#IsAcceptedName').is(':checked');

        var formData = new FormData();
        formData.append("FullName", $("#FullName").val());
        formData.append("IsAcceptedName", isAcceptedName);
        formData.append("ResultsFormat", "2");
        $.ajax({
            url: link,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                $("#section-species-search-results").html(response);
            }
        });
    });

    function SelectSpecies(ID, speciesText) {
        $('#modal-species-search').modal('hide');
        $("#SpeciesName").val(speciesText);
        $("#SpeciesID").val(ID);
    }

     /*
    ===========================================================================
    CROP FOR CWR MODAL
    ===========================================================================
    */
    $(document).on("click", "[id='btnSearchCropsForCWR']", function () {
        var link = '@Url.Action("CropForCWRSearch", "Taxonomy")';

        var formData = new FormData();
        formData.append("CropName", $("#CropName").val());
        formData.append("ResultsFormat", "2");

        $.ajax({
            url: link,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                $("#section-crop-for-cwr-search-results").html(response);
            }
        });
    });

    function SelectCropForCWR(ID, cropName) {
        $('#modal-crop-for-cwr-search').modal('hide');
        $("#CropForCWRName").val(cropName);
        $("#CropForCWRID").val(ID);
    }

    /*
    ===========================================================================
    NOTE SEARCH MODAL
    ===========================================================================
    */
    $(document).on("click", "[id='btnSearchNotes']", function () {
        var url = '@Url.Action("NoteSearch", "Taxonomy")';
        var dataSourceName = $("#DataSourceName").val();
        var searchText = $("#txtSearchNotes").val();

        $.post(url, { dataSourceName: dataSourceName, searchText: searchText })
            .done(function (response) {
                $("#section-note-search-results").html(response);
            });
    });

    function SelectNote(noteText) {
        $('#modal-note-search').modal('hide');
        CKEDITOR.instances.txtNote.setData(noteText);
    }
</script>


