@model USDA.ARS.GRIN.Admin.WebUI.ViewModels.Taxonomy.SpeciesHomeViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/select/1.3.3/css/select.dataTables.min.css">
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/buttons/1.7.1/css/buttons.dataTables.min.css">

<script type="text/javascript" language="javascript" src="https://cdn.datatables.net/select/1.3.3/js/dataTables.select.min.js"></script>
<script type="text/javascript" language="javascript" src="https://cdn.datatables.net/buttons/1.7.1/js/dataTables.buttons.min.js"></script>

<style>
    td.details-control {
        background: url('https://datatables.net/examples/resources/details_open.png') no-repeat center center;
    }

    tr.shown td.details-control {
        background: url('https://datatables.net/examples/resources/details_close.png') no-repeat center center;
    }

    .table > tbody > tr > td {
        vertical-align: middle;
    }

    .mailbox-controls {
        margin-bottom: 10px;
    }
</style>

<!-- ============================================================================================== -->
<!-- SEARCH CRITERIA -->
<!-- ============================================================================================== -->
<div class="row">
    <div class="col-md-12">
        <!-- Custom Tabs -->
        <div class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                <li class="active"><a href="#tab_1" data-toggle="tab">New Search</a></li>
                <li><a href="#tab_2" data-toggle="tab">Saved Searches</a></li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane active" id="tab_1">
                    @using (Html.BeginForm("SpeciesSearch", "Taxonomy", FormMethod.Post, new { id = "frmSearch" }))
                    {
                        <div class="row">
                            <div class="col-md-2">
                                <div class="form-group form-horizontal">
                                    <label>Created By</label>
                                    @Html.DropDownListFor(x => x.CreatedByCooperatorID, Model.Cooperators, "All cooperators", new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group form-horizontal">
                                    <label>Species Name</label>
                                    @Html.TextBoxFor(x => x.FullName, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group form-horizontal">
                                    <label>Protologue</label>
                                    @Html.TextBoxFor(x => x.Protologue, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group form-horizontal">
                                    <label>Accepted?</label>
                                    @Html.DropDownListFor(x => x.IsAcceptedName, Model.IsAccceptedNameOptions, "Either", new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group form-horizontal">
                                    <label>Note</label>
                                    @Html.TextBoxFor(x => x.Note, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="box-footer">
                            <input id="btnReset" type="button" class="btn btn-danger" value="Clear" />
                            <input id="btnSearch" type="button" class="btn btn-default" value="Search" />
                        </div>
                    }
                </div>
                <!-- /.tab-pane -->
                <div class="tab-pane" id="tab_2">

                </div>
            </div>
            <!-- /.tab-content -->
        </div>
        <!-- nav-tabs-custom -->
    </div>
</div>

<!-- ============================================================================================== -->
<!-- SEARCH RESULTS -->
<!-- ============================================================================================== -->
<div class="box box-default" style="padding:10px;">
    <div class="box-header with-border">
        <h3 class="box-title">Search Results</h3>
        <div class="box-tools pull-right">
            <div class="has-feedback">
            </div>
            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                <i class="fa fa-minus"></i>
            </button>
        </div>
    </div>
    <div class="box-body no-padding">
        <div id="section-search-results">

        </div>
    </div>
    <div class="overlay">
        <i class="fa fa-refresh fa-spin"></i>
    </div>
</div>

@{ Html.RenderAction("_FolderModal", "Taxonomy", new { id = Model.ID, context = "taxononomy_species" }); }

<!-- Page Script -->
<script type="text/javascript">

    $(document).ready(function () {
        Init();
    });

    function Init() {
        $(".overlay").hide();
    }

    $(document).on({
        ajaxStart: function () {
            $(".overlay").show();
        },
        ajaxStop: function () {
            $(".overlay").hide();
        }
    });

    $(function () {
        $("#btnSearch").click(function () {
            var link = '@Url.Action("SpeciesSearch", "Taxonomy")';
            var formData = new FormData();

            formData.append("CreatedByCooperatorID", $("#CreatedByCooperatorID").val());
            formData.append("FullName", $("#FullName").val());
            formData.append("Protologue", $("#Protologue").val());
            formData.append("IsAcceptedName", $("#IsAcceptedName").val());
            formData.append("ResultsFormat", "1");

            $.ajax({
                url: link,
                type: 'POST',
                cache: false,
                contentType: false,
                processData: false,
                data: formData,
                success: function (response) {
                    $("#section-search-results").html(response);
                }
            });
        });

        $("#btnReset").click(function () {
            $(this).closest('form').find("input[type=text], textarea").val("");
            $("#section-search-criteria select").val("");
            $('#section-search-results').html("");
        });
    });

    /*
    =============================================================================
    FOLDERS
    =============================================================================
    */
    $(document).on("click", "[id='btnAddFolder']", function () {
        $('#modal-folder-edit').modal('show');
    });

    $(document).on("click", "[id='btnSaveFolder']", function () {
        var dataSourceName = "taxonomy_species";
        var dataSourceTitle = "Species";
        var itemList = GetSelectedItems();
        var folderTitle = $("#Title").val();
        var folderCategory = $("#Category").val();
        var folderDescription = $("#Description").val();

        $.ajax({
        url: '@Url.Action("AddToFolder","Taxonomy")',
        type: "GET",
        data: {folderId: 0, folderTitle: folderTitle, folderCategory: folderCategory, folderDescription: folderDescription, isShared:false, dataSourceName: dataSourceName, dataSourceTitle: "Family", values:itemList.toString() },
        cache: false,
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (result) {
        },
        error: function () {
        }
    });
        $('#modal-folder-edit').modal('hide');
    });

    function GetSelectedItems() {

        var i = 0;
        var itemId = "";
        var valueArray = [];
        table = $("#data-table-species").DataTable();

        var oData = table.rows('.selected').data();
        $.each($(oData), function (key, value) {
            itemId = value[i];
            i = i++;

            itemId = itemId.replace("<span class=\"badge\">", "").replace("</span>", "");
            valueArray.push(itemId);
        });
        return valueArray;
    }



// ****************************************************************************************************************
// LEGACY CODE -- DataTable Ajax data source
// ****************************************************************************************************************
    @*<!--function SearchSpecies(cooperatorId = 0, genusName = "", speciesName = "", synonymCode = "", protologue = "")
    {
        try {
            var url = '@Url.Action("SpeciesNameSearch", "Taxonomy")';*@
            //$(document).ready(function () {
            //    $('#tblResults').DataTable({
            //        "ajax": url
            //    });
            //});
            //table = $("#searchtable").DataTable();
            //var oData = table.rows('.selected').data();
            //$.each($(oData), function (key, value) {
            //    avail = value[availindex];
            //    if (avail.indexOf("fa-shopping-cart") > 0) {
            //        avail = "Add to Cart";
            //    }
            //    ids += value[accidindex] + ":" + avail + ",";
            //var table = $('#tblSpeciesDataTest').DataTable();
            //table.clear();-->
            @*$.ajax({
            url: '@Url.Action("SpeciesNameSearch","Taxonomy")',
            type: "GET",
                data: { cooperatorId: cooperatorId, genusName: genusName, speciesName:speciesName, synonymCode:synonymCode, protologue:protologue },
            contentType: "application/json;",
            dataType: 'json',
            success: OnSuccess,
            failure: function (response) {
                console.log(response);
            },
            error: function (response) {
                console.log(response);
            }*@


    @*function GetUsersDetails(ele) {
        var dataRow = $('#tblSpeciesDataTest').DataTable().row($(ele).closest('tr')).data();
        var url = '@Url.Action("SpeciesEdit","Taxonomy", new { id = "SPECIES_ID" })';
        url = url.replace("SPECIES_ID", dataRow.ID);
        window.location.href = url;
    }

    function format(d) {
        // `d` is the original data object for the row
        return '<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;">' +
            '<tr>' +
            '<td><label>Note</label></td>' +
            '<td>' + d.Note + '</td>' +
            '</tr>' +
            '<tr>' +
            '<td></td>' +
            '<td></td>' +
            '</tr>' +
            '</table>';
    }*@
    //function OnSuccess(response) {
    //    try {
    //        $("#tblSpeciesDataTest").DataTable(
    //            {
    //                bLengthChange: true,
    //                select: true,
    //                "bDestroy": true,
    //                lengthMenu: [[5, 10, -1], [5, 10, "All"]],
    //                bFilter: true,
    //                bSort: true,
    //                bPaginate: true,
    //                data: response,
    //                columns: [
    //                    {
    //                        "className": 'details-control',
    //                        "orderable": false,
    //                        "data": null,
    //                        "defaultContent": ''
    //                    },
    //                    {
    //                        data: 'ID',
    //                        render: function (data, type, row, meta) {
    //                            return type === 'display' ?
    //                                '<span class="badge">' + data + '</span>' :
    //                                data;
    //                        }
    //                    },
    //                    { 'data': 'Name' },
    //                    { 'data': 'Authority' },
    //                    { 'data': 'NameVerifiedDate' },
    //                    { 'data': 'Protologue' },
    //                    {
    //                        data: 'SynonymCode',
    //                        render: function (data, type, row, meta) {
    //                            return type === 'display' ?
    //                                '<span class="label label-success">' + data + '</span>' :
    //                                data;
    //                        }
    //                    },
    //                ],
    //                columnDefs: [{
    //                    "targets": 7,
    //                    "data": null,
    //                    "defaultContent": "<a class='btn btn-default' onclick='GetUsersDetails(this)' title='Edit' href='javascript:;'>Edit</a>"
    //                }]
    //            });
    //    }
    //    catch (ex) {
    //        console.log(ex.message);
    //    }
    //};

    //$('#tblSpeciesDataTest tbody').on('click', 'td.details-control', function () {
    //    var tr = $(this).closest('tr');
    //    var row = $('#tblSpeciesDataTest').DataTable().row(tr);

    //    if (row.child.isShown()) {
    //        // This row is already open - close it
    //        row.child.hide();
    //        tr.removeClass('shown');
    //    }
    //    else {
    //        // Open this row
    //        row.child(format(row.data())).show();
    //        tr.addClass('shown');
    //    }
    //});
    //$('#tblSpeciesDataTest tbody').on('click', 'tr', function () {
    //    $(this).toggleClass('selected');
    //});

/*
========================================================================================
GEO PICKER
========================================================================================
*/

$("#select-continents input:checkbox").click(function () {
    var valueArray = [];

    $("#select-continents input:checked").each(function () {
        var id = $(this).attr("id");
        valueArray.push(id);
    }
    );

    $.ajax({
        url: '@Url.Action("GetRegions","Taxonomy")',
        type: "GET",
        data: { continentIds:valueArray.toString() },
        contentType: "application/json;",
        dataType: 'json',
        success: function (result) {
            var items = '';

            $("#select-regions").empty();

            $.each(result, function (i, item) {
                var liItem = "<li><a href='#'><i class='fa fa-globe'></i>" + item.Name + "<span class='label pull-right'><input id=" + item.ID + " type='checkbox' /></span></a></li>";
                $("#select-regions").append(liItem);
            });
        },
        error: function (xhr) {
            console.log(xhr.responseText);
        }
    });
});

$(document).on("click", "#select-regions input:checked", function () {
    var valueArray = [];

    $("#select-regions input:checked").each(function () {
        var id = $(this).attr("id");
        valueArray.push(id);
    }
    );

    $.ajax({
        url: '@Url.Action("GetCountries","Taxonomy")',
        type: "GET",
        data: { regionIds:valueArray.toString() },
        contentType: "application/json;",
        dataType: 'json',
        success: function (result) {
            var items = '';

            $("#select-countries").empty();

            $.each(result, function (i, item) {
                var liItem = "<li><a href='#'><i class='fa fa-globe'></i>" + item.Title + "<span class='label pull-right'><input id=" + item.Code + " type='checkbox' /></span></a></li>";
                $("#select-countries").append(liItem);
            });
        },
        error: function (xhr) {
            console.log(xhr.responseText);
        }
    });
});

$(document).on("click", "#select-countries input:checked", function () {
    var valueArray = [];

    $("#select-countries input:checked").each(function () {
        var id = $(this).attr("id");
        valueArray.push(id);
    }
    );

    $.ajax({
        url: '@Url.Action("GetMunicipalities","Taxonomy")',
        type: "GET",
        data: { countryCodes:valueArray.toString() },
        contentType: "application/json;",
        dataType: 'json',
        success: function (result) {
            var items = '';

            $("#select-municipalities").empty();

            $.each(result, function (i, item) {
                var liItem = "<li><a href='#'><i class='fa fa-globe'></i>" + item.Name + "<span class='label pull-right'><input id=" + item.ID + " type='checkbox' /></span></a></li>";
                $("#select-municipalities").append(liItem);
            });
        },
        error: function (xhr) {
            console.log(xhr.responseText);
        }
    });
});


    /*
    ========================================================================================
    EXCEL EXPORT
    ========================================================================================
    */
    $(function () {
        var table = $('#tblSpeciesDataTest').dataTable();

        $("#btnExport").click(function (e) {
            e.preventDefault();
            window.open('data:application/vnd.ms-excel,' +
                encodeURIComponent(table[0].outerHTML));
        });
    });

    /*
    =============================================================================
    DATATABLES
    =============================================================================
    */
    $(document).on("click", "[id='btnSelectAll']", function () {
        var table = $('#data-table-species').DataTable();
        table.rows().select();
    });

    $(document).on("click", "[id='btnDeSelectAll']", function () {
        var table = $('#data-table-species').DataTable();
        table.rows().deselect();
    });

</script>


